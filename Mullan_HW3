Mullan_HW3

1. Histogram
def histogram(list):
    for int in list:
        y=int
        x=0
        string = ''
        while x<int:
            string = string + '*'
            x=x+1
            
        print (string)
        
2. maximum in a list
def max_in_list(list):
    x=1
    y=len(list)
    max=list[0]
    
    while x<y:
        if list[x]>max:
            max=list[x]
            x=x+1
        else:
            x=x+1
    print (max)
    
3. Lengths of words
def listofwords(words):     #words must be a list of strings in brackets. For example: ['Hoya','Saxa','Jack']
    numberlist = []         #Blank list to put lengths in  
    x=0                     #counter for the position in the input words
    for string in words:
        numberlist.append(len(words[x]))    #Places the len of the string in the list   
        x=x+1                               #Increase the counter to get the length of the next string
    return (numberlist)

4. Find longest word
def find_longest_word(words):           #words must be a list of strings in brackets
    longest = words[0]                  #assume the first one is the longest
    x=0                                 #Counter
    for string in words:
        if len(words[x])>len(longest):  #if the string that we are looking at is longer than the previous longest word,
            longest = words[x]          #It is the new longest word
        
        x=x+1                           #Increase the counter to check the next word in the list
                
    return len(longest)                 #Return the length of the longest word

5. Filter long words
def filter_long_words(words,n):
    longwords = []                      #Create an empty list to put my words in if they fit criteria
    for string in words:                #Check every string in the list
        if len(string)>n:               #Add the string to the empty list longwords if it is long enough
            longwords.append(string)
            
    return longwords
    
6. advanced palindromes
from string import punctuation
def strip_string(s):                #This function converts capital case to lower case and strips punctuation and blank spaces
    
    new=list(s)                     #Converts the string s to a list and replaces spaces with nothing
    x=0
    for char in new:
        if new[x]==' ':
            new[x]=''
        
        x=x+1
    d = ''.join(new)                #Joins the list into a string d
    d=d.lower()                     #Converts upper case letters in string d to lower case
    return ''.join(c for c in d if c not in punctuation)    #removes punctuation

def reverse(string):        #Gets the palindrome of a string
  y = len(string)-1         #Establish y as the index to pull characters from string
  newstring = ''            #Establish the output newstring as an empty string to put characters into
  
  while y>=0:
    newstring = newstring + string[y]     #Insert characters into newstring starting with the last character in string
    y=y-1
    
  return (newstring)

def is_palindrome(string):
    stripped=strip_string(string)                   #Use the strip_string function to remove punctuation and spaces
    newstring = reverse(stripped)                 #Use the reverse function to get the palindrome of the stripped string
  
    if stripped==newstring:                         #compare the stripped string to its palindrome
            print ("True")
    
    else:
            print ('False')
